plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'jacoco'
	id 'org.sonarqube' version '5.0.0.4638'
}

group = 'com.kenect.contact'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

jacoco {
	toolVersion = "0.8.12"
}

jacocoTestReport {
	reports {
		xml.required.set(true)
		html.required.set(true)
		html.outputLocation = layout.buildDirectory.dir('coverage-reports/unit-test-report/')
	}
}

repositories {
	mavenCentral()
}

dependencies {
	annotationProcessor 'org.projectlombok:lombok'
	compileOnly 'org.projectlombok:lombok'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.modelmapper:modelmapper:3.1.1'

	implementation 'com.zaxxer:HikariCP'
	implementation 'org.postgresql:postgresql'
	implementation 'org.flywaydb:flyway-core'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

jacocoTestReport {
	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it).exclude(
					'**/com/kenect/contact/aggregator/Application.class',
					'**/com/kenect/contact/aggregator/config/**',
					'**/com/kenect/contact/aggregator/dto/**',
					'**/com/kenect/contact/aggregator/exception/**',
			)
		}))
	}
}

test {
	finalizedBy jacocoTestReport
}

sonar {
	properties {
		property "sonar.projectKey", System.getenv("SONAR_PROJECT_KEY")
		property "sonar.host.url", System.getenv("SONAR_HOST_URL")
		property "sonar.token", System.getenv("SONAR_TOKEN")
		property "sonar.java.binaries", "build/classes"
		property "sonar.sources", "src/main/java"
		property "sonar.tests", "src/test/java"
		property "sonar.java.coveragePlugin", "jacoco"
		property "sonar.exclusions",
				"**/com/kenect/contact/aggregator/Application.class, " +
				"**/com/kenect/contact/aggregator/config/**, " +
				"**/com/kenect/contact/aggregator/dto/**, " +
				"**/com/kenect/contact/aggregator/exception/**"
	}
}

tasks.register('runSonar') {
	dependsOn 'sonar'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootJar') {
	archiveFileName.set("app.jar")
}

tasks.named('jar') {
	enabled = false
}